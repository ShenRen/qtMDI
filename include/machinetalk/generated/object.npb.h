/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.0 at Sun Feb  1 12:40:11 2015. */

#ifndef PB_OBJECT_NPB_H_INCLUDED
#define PB_OBJECT_NPB_H_INCLUDED
#include <pb.h>

#include <machinetalk/generated/types.npb.h>
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _pb_Function {
    pb_callback_t name;
    bool has_handle;
    uint32_t handle;
    bool has_owner_id;
    uint32_t owner_id;
    bool has_users;
    uint32_t users;
    bool has_runtime;
    uint32_t runtime;
    bool has_maxtime;
    uint32_t maxtime;
    bool has_reentrant;
    bool reentrant;
} pb_Function;

typedef struct _pb_Instance {
    pb_callback_t name;
    bool has_id;
    int32_t id;
} pb_Instance;

typedef struct _pb_Param {
    bool has_type;
    pb_ValueType type;
    pb_callback_t name;
    bool has_handle;
    uint32_t handle;
    bool has_halbit;
    bool halbit;
    bool has_halfloat;
    double halfloat;
    bool has_hals32;
    int32_t hals32;
    bool has_halu32;
    uint32_t halu32;
    pb_callback_t strval;
    pb_callback_t blob;
    bool has_dir;
    pb_HalParamDirection dir;
    pb_callback_t oldname;
    bool has_owner;
    int32_t owner;
    bool has_runtime;
    int32_t runtime;
    bool has_maytime;
    int32_t maytime;
} pb_Param;

typedef struct _pb_Pin {
    bool has_type;
    pb_ValueType type;
    pb_callback_t name;
    bool has_handle;
    uint32_t handle;
    bool has_dir;
    pb_HalPinDirection dir;
    bool has_halbit;
    bool halbit;
    bool has_halfloat;
    double halfloat;
    bool has_hals32;
    int32_t hals32;
    bool has_halu32;
    uint32_t halu32;
    bool has_owner;
    int32_t owner;
    bool has_linked;
    bool linked;
    pb_callback_t oldname;
    bool has_epsilon;
    double epsilon;
    bool has_flags;
    uint32_t flags;
} pb_Pin;

typedef struct _pb_ProtocolParameters {
    bool has_keepalive_timer;
    int32_t keepalive_timer;
    bool has_group_timer;
    int32_t group_timer;
    bool has_rcomp_timer;
    int32_t rcomp_timer;
} pb_ProtocolParameters;

typedef struct _pb_Ring {
    pb_callback_t name;
    bool has_handle;
    uint32_t handle;
    bool has_owner;
    int32_t owner;
    bool has_stream;
    bool stream;
    bool has_wmutex;
    bool wmutex;
    bool has_rmutex;
    bool rmutex;
    bool has_rtapi_shm;
    bool rtapi_shm;
    bool has_reader;
    int32_t reader;
    bool has_writer;
    int32_t writer;
    bool has_size;
    int32_t size;
    bool has_scratchpad;
    int32_t scratchpad;
} pb_Ring;

typedef struct _pb_ServiceAnnouncement {
    pb_ServiceType stype;
    uint32_t version;
    uint32_t instance;
    pb_callback_t uri;
    pb_callback_t description;
    pb_ServiceAPI api;
} pb_ServiceAnnouncement;

typedef struct _pb_Signal {
    bool has_type;
    pb_ValueType type;
    pb_callback_t name;
    bool has_handle;
    uint32_t handle;
    bool has_halbit;
    bool halbit;
    bool has_halfloat;
    double halfloat;
    bool has_hals32;
    int32_t hals32;
    bool has_halu32;
    uint32_t halu32;
    pb_callback_t strval;
    pb_callback_t blob;
    bool has_readers;
    uint32_t readers;
    bool has_writers;
    uint32_t writers;
    bool has_bidirs;
    uint32_t bidirs;
} pb_Signal;

typedef struct _pb_Thread {
    pb_callback_t name;
    bool has_handle;
    uint32_t handle;
    bool has_uses_fp;
    bool uses_fp;
    bool has_period;
    uint32_t period;
    bool has_priority;
    int32_t priority;
    bool has_task_id;
    uint32_t task_id;
    bool has_cpu_id;
    uint32_t cpu_id;
    pb_callback_t function;
} pb_Thread;

typedef struct _pb_Component {
    pb_callback_t name;
    bool has_ninst;
    uint32_t ninst;
    bool has_comp_id;
    int32_t comp_id;
    bool has_type;
    uint32_t type;
    bool has_state;
    uint32_t state;
    bool has_last_update;
    uint32_t last_update;
    bool has_last_bound;
    uint32_t last_bound;
    bool has_last_unbound;
    uint32_t last_unbound;
    bool has_pid;
    uint32_t pid;
    pb_callback_t args;
    bool has_timer;
    int32_t timer;
    bool has_userarg1;
    int32_t userarg1;
    bool has_userarg2;
    int32_t userarg2;
    pb_callback_t pin;
    pb_callback_t param;
    bool has_no_create;
    bool no_create;
} pb_Component;

typedef struct _pb_Member {
    bool has_mtype;
    pb_ObjectType mtype;
    bool has_userarg1;
    int32_t userarg1;
    bool has_epsilon;
    double epsilon;
    bool has_signal;
    pb_Signal signal;
    pb_callback_t groupname;
    bool has_handle;
    uint32_t handle;
    bool has_pin;
    pb_Pin pin;
    bool has_param;
    pb_Param param;
} pb_Member;

typedef struct _pb_Originator {
    bool has_origin;
    pb_OriginType origin;
    bool has_detail;
    pb_OriginDetail detail;
    pb_callback_t name;
    bool has_id;
    int32_t id;
    bool has_instance;
    pb_Instance instance;
} pb_Originator;

typedef struct _pb_AnError {
    int32_t error_code;
    bool has_severity;
    pb_Severity severity;
    pb_callback_t error_text;
    bool has_origin;
    pb_Originator origin;
} pb_AnError;

typedef struct _pb_Group {
    pb_callback_t name;
    bool has_handle;
    uint32_t handle;
    bool has_userarg1;
    int32_t userarg1;
    bool has_userarg2;
    int32_t userarg2;
    bool has_refcount;
    int32_t refcount;
    pb_callback_t member;
} pb_Group;

/* Default values for struct fields */
extern const uint32_t pb_ServiceAnnouncement_version_default;
extern const uint32_t pb_ServiceAnnouncement_instance_default;

/* Initializer values for message structs */
#define pb_Instance_init_default                 {{{NULL}, NULL}, false, 0}
#define pb_ServiceAnnouncement_init_default      {(pb_ServiceType)0, 0u, 0u, {{NULL}, NULL}, {{NULL}, NULL}, (pb_ServiceAPI)0}
#define pb_Originator_init_default               {false, (pb_OriginType)0, false, (pb_OriginDetail)0, {{NULL}, NULL}, false, 0, false, pb_Instance_init_default}
#define pb_AnError_init_default                  {0, false, (pb_Severity)0, {{NULL}, NULL}, false, pb_Originator_init_default}
#define pb_Pin_init_default                      {false, (pb_ValueType)0, {{NULL}, NULL}, false, 0, false, (pb_HalPinDirection)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define pb_Signal_init_default                   {false, (pb_ValueType)0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, false, 0}
#define pb_Param_init_default                    {false, (pb_ValueType)0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, (pb_HalParamDirection)0, {{NULL}, NULL}, false, 0, false, 0, false, 0}
#define pb_Function_init_default                 {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define pb_Thread_init_default                   {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}
#define pb_Component_init_default                {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define pb_Ring_init_default                     {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define pb_Member_init_default                   {false, (pb_ObjectType)0, false, 0, false, 0, false, pb_Signal_init_default, {{NULL}, NULL}, false, 0, false, pb_Pin_init_default, false, pb_Param_init_default}
#define pb_Group_init_default                    {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}
#define pb_ProtocolParameters_init_default       {false, 0, false, 0, false, 0}
#define pb_Instance_init_zero                    {{{NULL}, NULL}, false, 0}
#define pb_ServiceAnnouncement_init_zero         {(pb_ServiceType)0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, (pb_ServiceAPI)0}
#define pb_Originator_init_zero                  {false, (pb_OriginType)0, false, (pb_OriginDetail)0, {{NULL}, NULL}, false, 0, false, pb_Instance_init_zero}
#define pb_AnError_init_zero                     {0, false, (pb_Severity)0, {{NULL}, NULL}, false, pb_Originator_init_zero}
#define pb_Pin_init_zero                         {false, (pb_ValueType)0, {{NULL}, NULL}, false, 0, false, (pb_HalPinDirection)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define pb_Signal_init_zero                      {false, (pb_ValueType)0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, false, 0}
#define pb_Param_init_zero                       {false, (pb_ValueType)0, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, (pb_HalParamDirection)0, {{NULL}, NULL}, false, 0, false, 0, false, 0}
#define pb_Function_init_zero                    {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define pb_Thread_init_zero                      {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}
#define pb_Component_init_zero                   {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define pb_Ring_init_zero                        {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define pb_Member_init_zero                      {false, (pb_ObjectType)0, false, 0, false, 0, false, pb_Signal_init_zero, {{NULL}, NULL}, false, 0, false, pb_Pin_init_zero, false, pb_Param_init_zero}
#define pb_Group_init_zero                       {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}
#define pb_ProtocolParameters_init_zero          {false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_Function_name_tag                     1
#define pb_Function_handle_tag                   2
#define pb_Function_owner_id_tag                 3
#define pb_Function_users_tag                    4
#define pb_Function_runtime_tag                  5
#define pb_Function_maxtime_tag                  6
#define pb_Function_reentrant_tag                7
#define pb_Instance_name_tag                     1
#define pb_Instance_id_tag                       2
#define pb_Param_type_tag                        1
#define pb_Param_name_tag                        2
#define pb_Param_handle_tag                      3
#define pb_Param_halbit_tag                      5
#define pb_Param_halfloat_tag                    6
#define pb_Param_hals32_tag                      7
#define pb_Param_halu32_tag                      8
#define pb_Param_strval_tag                      9
#define pb_Param_blob_tag                        10
#define pb_Param_dir_tag                         11
#define pb_Param_oldname_tag                     12
#define pb_Param_owner_tag                       13
#define pb_Param_runtime_tag                     14
#define pb_Param_maytime_tag                     15
#define pb_Pin_type_tag                          1
#define pb_Pin_name_tag                          2
#define pb_Pin_handle_tag                        3
#define pb_Pin_dir_tag                           4
#define pb_Pin_halbit_tag                        5
#define pb_Pin_halfloat_tag                      6
#define pb_Pin_hals32_tag                        7
#define pb_Pin_halu32_tag                        8
#define pb_Pin_owner_tag                         9
#define pb_Pin_linked_tag                        10
#define pb_Pin_oldname_tag                       11
#define pb_Pin_epsilon_tag                       12
#define pb_Pin_flags_tag                         13
#define pb_ProtocolParameters_keepalive_timer_tag 1
#define pb_ProtocolParameters_group_timer_tag    2
#define pb_ProtocolParameters_rcomp_timer_tag    3
#define pb_Ring_name_tag                         1
#define pb_Ring_handle_tag                       2
#define pb_Ring_owner_tag                        3
#define pb_Ring_stream_tag                       4
#define pb_Ring_wmutex_tag                       5
#define pb_Ring_rmutex_tag                       6
#define pb_Ring_rtapi_shm_tag                    7
#define pb_Ring_reader_tag                       8
#define pb_Ring_writer_tag                       9
#define pb_Ring_size_tag                         10
#define pb_Ring_scratchpad_tag                   11
#define pb_ServiceAnnouncement_stype_tag         1
#define pb_ServiceAnnouncement_version_tag       2
#define pb_ServiceAnnouncement_instance_tag      3
#define pb_ServiceAnnouncement_api_tag           8
#define pb_ServiceAnnouncement_uri_tag           6
#define pb_ServiceAnnouncement_description_tag   7
#define pb_Signal_type_tag                       1
#define pb_Signal_name_tag                       2
#define pb_Signal_handle_tag                     3
#define pb_Signal_halbit_tag                     5
#define pb_Signal_halfloat_tag                   6
#define pb_Signal_hals32_tag                     7
#define pb_Signal_halu32_tag                     8
#define pb_Signal_strval_tag                     9
#define pb_Signal_blob_tag                       10
#define pb_Signal_readers_tag                    11
#define pb_Signal_writers_tag                    12
#define pb_Signal_bidirs_tag                     13
#define pb_Thread_name_tag                       1
#define pb_Thread_handle_tag                     2
#define pb_Thread_uses_fp_tag                    3
#define pb_Thread_period_tag                     4
#define pb_Thread_priority_tag                   5
#define pb_Thread_task_id_tag                    6
#define pb_Thread_cpu_id_tag                     7
#define pb_Thread_function_tag                   8
#define pb_Component_name_tag                    1
#define pb_Component_ninst_tag                   2
#define pb_Component_comp_id_tag                 4
#define pb_Component_type_tag                    5
#define pb_Component_state_tag                   6
#define pb_Component_last_update_tag             7
#define pb_Component_last_bound_tag              8
#define pb_Component_last_unbound_tag            9
#define pb_Component_pid_tag                     10
#define pb_Component_args_tag                    11
#define pb_Component_timer_tag                   12
#define pb_Component_userarg1_tag                14
#define pb_Component_userarg2_tag                15
#define pb_Component_pin_tag                     16
#define pb_Component_param_tag                   17
#define pb_Component_no_create_tag               18
#define pb_Member_mtype_tag                      1
#define pb_Member_userarg1_tag                   2
#define pb_Member_epsilon_tag                    3
#define pb_Member_signal_tag                     4
#define pb_Member_groupname_tag                  5
#define pb_Member_handle_tag                     6
#define pb_Member_pin_tag                        7
#define pb_Member_param_tag                      8
#define pb_Originator_origin_tag                 1
#define pb_Originator_detail_tag                 2
#define pb_Originator_name_tag                   3
#define pb_Originator_id_tag                     4
#define pb_Originator_instance_tag               5
#define pb_AnError_error_code_tag                1
#define pb_AnError_severity_tag                  2
#define pb_AnError_error_text_tag                3
#define pb_AnError_origin_tag                    4
#define pb_Group_name_tag                        1
#define pb_Group_handle_tag                      2
#define pb_Group_userarg1_tag                    4
#define pb_Group_userarg2_tag                    5
#define pb_Group_refcount_tag                    6
#define pb_Group_member_tag                      7

/* Struct field encoding specification for nanopb */
extern const pb_field_t pb_Instance_fields[3];
extern const pb_field_t pb_ServiceAnnouncement_fields[7];
extern const pb_field_t pb_Originator_fields[6];
extern const pb_field_t pb_AnError_fields[5];
extern const pb_field_t pb_Pin_fields[14];
extern const pb_field_t pb_Signal_fields[13];
extern const pb_field_t pb_Param_fields[15];
extern const pb_field_t pb_Function_fields[8];
extern const pb_field_t pb_Thread_fields[9];
extern const pb_field_t pb_Component_fields[17];
extern const pb_field_t pb_Ring_fields[12];
extern const pb_field_t pb_Member_fields[9];
extern const pb_field_t pb_Group_fields[7];
extern const pb_field_t pb_ProtocolParameters_fields[4];

/* Maximum encoded size of messages (where known) */
#define pb_ProtocolParameters_size               15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
